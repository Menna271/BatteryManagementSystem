@startuml

class CEnergyContext {
    -double pvPower
    -double houseConsumption
    +onUpdate(field: string, value: double): void
    +getPVPower(): double
    +getHouseConsumption(): double
    +requestCharge(power: double): void
    +requestDischarge(power: double): void
}

class CGrid {
    -double gridPower
    +getGridPower(): double
    +supplyToGrid(power: double): void
    +drawFromGrid(power: double): void
}

class CHouse {
    -double consumption
    +getConsumption(): double
}

class CPVPanel {
    -double generatedPower
    +getGeneratedPower(): double
}

class CReadConfig {
    +readConfig(file: string): void
}

class CStorageFactory {
    +createStorageSystem(type: string): CStorageSystem
}

class CStorageSystem {
    -double storedEnergy
    +storeEnergy(amount: double): void
    +releaseEnergy(amount: double): void
    +getStoredEnergy(): double
}

class CSupplyFromPVStrategy {
    +executeStrategy(): void
}

class CSupplyFromStorageStrategy {
    +executeStrategy(): void
}

class CVendorABattery {
    -double capacity
    +charge(amount: double): void
    +discharge(amount: double): void
}

class CVendorABatteryAdapter {
    +charge(amount: double): void
    +discharge(amount: double): void
}

class CVendorBInverter {
    +convertDCtoAC(input: double): double
    +convertACtoDC(input: double): double
}

class CVendorBInverterAdapter {
    +convertPower(input: double, mode: string): double
}

class CVendorXController {
    +controlSystem(): void
}

class CVendorXControllerAdapter {
    +executeControl(): void
}

class IBattery {
    +charge(amount: double): void
    +discharge(amount: double): void
    +getCapacity(): double
}

class IController {
    +control(): void
}

class IEnergyContext {
    +onUpdate(field: string, value: double): void
    +getPVPower(): double
    +getHouseConsumption(): double
}

class IEnergyStrategy {
    +executeStrategy(): void
}

class IInverter {
    +convertPower(input: double, mode: string): double
}

class IObservable {
    +addObserver(observer: IObserver): void
    +removeObserver(observer: IObserver): void
    +notifyObservers(): void
}

class IObserver {
    +update(): void
}

CEnergyContext --|> IEnergyContext
CEnergyContext --|> IObserver
CEnergyContext --> CStorageSystem
CEnergyContext --> CGrid

CHouse --|> IObservable
CPVPanel --|> IObservable
CHouse --> CEnergyContext
CPVPanel --> CEnergyContext

CReadConfig --> CStorageFactory
CReadConfig --> CEnergyContext

CStorageFactory --> IController
CStorageFactory --> IEnergyContext
CStorageFactory --> CReadConfig

CStorageSystem --|> IBattery
CStorageSystem --> IEnergyContext
CStorageSystem --> CStorageFactory
CStorageSystem --> IController
CStorageSystem --> IBattery

CSupplyFromPVStrategy --|> IEnergyStrategy
CSupplyFromPVStrategy --> IEnergyContext
CSupplyFromPVStrategy --> CPVPanel

CSupplyFromStorageStrategy --|> IEnergyStrategy
CSupplyFromStorageStrategy --> IEnergyContext
CSupplyFromStorageStrategy --> CStorageSystem

CVendorABatteryAdapter --|> IBattery
CVendorABatteryAdapter --> CVendorABattery

CVendorBInverterAdapter --|> IInverter
CVendorBInverterAdapter --> CVendorBInverter

CVendorXControllerAdapter --|> IController
CVendorXControllerAdapter --> CVendorXController

IEnergyContext --|> IObservable
IController --|> IObserver
IEnergyStrategy --> IEnergyContext

IObservable --> IObserver : "Notifies"
IObserver --> IObservable : "Observes"

@enduml
